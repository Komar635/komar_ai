
import { NextRequest, NextResponse } from 'next/server'
import { safeLogger } from '@/lib/logger'
import { providerManager } from '../../../lib/provider-manager'
import { responseCache } from '@/lib/response-cache'
import { createContextualPrompt, buildFinalPrompt } from '@/lib/prompts'

export interface ChatRequest {
  message: string
  mode: 'fast' | 'deep'
  chatHistory?: Array<{
    role: 'user' | 'assistant'
    content: string
  }>
}

export interface ChatResponse {
  content: string
  thinking?: string
  mode: 'fast' | 'deep'
  processingTime: number
  model: string
}

export async function POST(request: NextRequest) {
  try {
    const startTime = Date.now()
    const body: ChatRequest = await request.json()
    
    const { message, mode, chatHistory = [] } = body

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!message || !message.trim()) {
      return NextResponse.json(
        { error: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' },
        { status: 400 }
      )
    }

    if (!['fast', 'deep'].includes(mode)) {
      return NextResponse.json(
        { error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "fast" –∏–ª–∏ "deep"' },
        { status: 400 }
      )
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –ø–µ—Ä–µ–¥ –æ–±—Ä–∞—â–µ–Ω–∏–µ–º –∫ –ò–ò
    const cachedResponse = responseCache.get(message, mode)
    if (cachedResponse) {
      cachedResponse.processingTime = Date.now() - startTime
      return NextResponse.json(cachedResponse)
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª—É—á—à–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    let currentProvider = providerManager.getBestAvailableProvider()
    let response: ChatResponse
    let attemptCount = 0
    let lastError: Error | null = null

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç —Å fallback –º–µ–∂–¥—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
    while (currentProvider) {
      try {
        attemptCount++
        safeLogger.info(`üöÄ –ü–æ–ø—ã—Ç–∫–∞ ${attemptCount} —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º: ${currentProvider}`)
        
        response = await executeProviderRequest(currentProvider, message, mode, chatHistory)
        
        // –û—Ç–º–µ—á–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∫–∞–∫ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω—ã–π
        providerManager.markProviderAsHealthy(currentProvider)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        responseCache.set(message, mode, response, currentProvider)
        
        response.processingTime = Date.now() - startTime
        return NextResponse.json(response)
        
      } catch (error) {
        lastError = error instanceof Error ? error : new Error(String(error))
        safeLogger.error(`‚ùå –û—à–∏–±–∫–∞ —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º ${currentProvider}:`, lastError.message)
        
        // –û—Ç–º–µ—á–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∫–∞–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π
        providerManager.markProviderAsUnhealthy(currentProvider, lastError.message)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Å —Ç–µ–∫—É—â–∏–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º
        if (providerManager.canRetryWithProvider(currentProvider, attemptCount)) {
          safeLogger.info(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å ${currentProvider}...`)
          continue
        }
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä
        const nextProvider = providerManager.getNextProvider(currentProvider)
        if (nextProvider) {
          safeLogger.info(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä: ${nextProvider}`)
          currentProvider = nextProvider
          attemptCount = 0
          continue
        }
        
        break // –í—Å–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∏—Å—á–µ—Ä–ø–∞–Ω—ã
      }
    }
    
    // –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    throw lastError || new Error('–í—Å–µ –ò–ò-–ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã')
    
  } catch (error) {
    safeLogger.error('–û—à–∏–±–∫–∞ API —á–∞—Ç–∞:', error)
    
    const errorMessage = error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    const errorStack = error instanceof Error ? error.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞ –æ—à–∏–±–æ–∫'
    
    // –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
    safeLogger.error(`–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏: ${errorMessage}`)
    safeLogger.error(`–°—Ç–µ–∫ –æ—à–∏–±–∫–∏: ${errorStack}`)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    const providersStatus = providerManager.getProvidersStatus()
    safeLogger.error('–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:', providersStatus)
    
    return NextResponse.json(
      { 
        error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞',
        details: process.env.NODE_ENV === 'development' ? {
          message: errorMessage,
          stack: errorStack,
          providersStatus
        } : undefined
      },
      { status: 500 }
    )
  }
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
 */
async function executeProviderRequest(
  provider: string,
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  switch (provider) {
    case 'huggingface':
      return await handleHuggingFaceRequest(message, mode, chatHistory)
    case 'ollama':
      return await handleOllamaRequest(message, mode, chatHistory)
    case 'together':
      return await handleTogetherAIRequest(message, mode, chatHistory)
    case 'groq':
      return await handleGroqRequest(message, mode, chatHistory)
    case 'cohere':
      return await handleCohereRequest(message, mode, chatHistory)
    case 'openai':
      return await handleOpenAIRequest(message, mode, chatHistory)
    case 'mock':
    default:
      return await handleMockRequest(message, mode, chatHistory)
  }
}

// Hugging Face Inference API
async function handleHuggingFaceRequest(
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  const HF_API_URL = 'https://api-inference.huggingface.co/models'
  const HF_TOKEN = process.env.HUGGINGFACE_TOKEN
  
  if (!HF_TOKEN) {
    // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    safeLogger.warn('HUGGINGFACE_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø')
  }

  // –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ Hugging Face
  const models = {
    fast: [
      'microsoft/DialoGPT-medium',
      'facebook/blenderbot-400M-distill',
      'microsoft/DialoGPT-small'
    ],
    deep: [
      'microsoft/DialoGPT-large', 
      'facebook/blenderbot-1B-distill',
      'google/flan-t5-base'
    ]
  }
  
  const selectedModels = models[mode]
  let lastError: Error | null = null
  
  // –ü—Ä–æ–±—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –¥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
  for (const model of selectedModels) {
    try {
      safeLogger.info(`–ü—Ä–æ–±—É–µ–º –º–æ–¥–µ–ª—å: ${model}`)
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –º–æ–¥–µ–ª–∏
      let payload: any
      
      if (model.includes('DialoGPT')) {
        // –î–ª—è DialoGPT —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        const context = chatHistory
          .slice(-5) // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
          .map(msg => `${msg.role === 'user' ? 'Human' : 'Bot'}: ${msg.content}`)
          .join(' ')
        
        const prompt = context 
          ? `${context} Human: ${message} Bot:`
          : `Human: ${message} Bot:`
          
        payload = {
          inputs: prompt,
          parameters: {
            max_new_tokens: mode === 'fast' ? 100 : 200,
            temperature: 0.7,
            do_sample: true,
            top_p: 0.9,
            return_full_text: false,
            pad_token_id: 50256
          },
          options: {
            wait_for_model: true,
            use_cache: false
          }
        }
      } else if (model.includes('blenderbot')) {
        // –î–ª—è BlenderBot –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
        payload = {
          inputs: message,
          parameters: {
            max_length: mode === 'fast' ? 100 : 200,
            min_length: 10,
            do_sample: true,
            temperature: 0.7
          },
          options: {
            wait_for_model: true,
            use_cache: false
          }
        }
      } else {
        // –î–ª—è T5 –∏ –¥—Ä—É–≥–∏—Ö –º–æ–¥–µ–ª–µ–π
        payload = {
          inputs: `–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å: ${message}`,
          parameters: {
            max_new_tokens: mode === 'fast' ? 100 : 200,
            temperature: 0.7
          },
          options: {
            wait_for_model: true,
            use_cache: false
          }
        }
      }
      
      const headers: Record<string, string> = {
        'Content-Type': 'application/json',
      }
      
      if (HF_TOKEN) {
        headers['Authorization'] = `Bearer ${HF_TOKEN}`
      }

      const response = await fetch(`${HF_API_URL}/${model}`, {
        method: 'POST',
        headers,
        body: JSON.stringify(payload)
      })

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}))
        throw new Error(`HTTP ${response.status}: ${errorData.error || response.statusText}`)
      }

      const result = await response.json()
      
      let content: string
      
      if (Array.isArray(result) && result[0]) {
        if (result[0].generated_text !== undefined) {
          content = result[0].generated_text
          // –û—á–∏—â–∞–µ–º –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è DialoGPT
          if (model.includes('DialoGPT')) {
            content = content.split('Bot:').pop()?.trim() || content
          }
        } else if (result[0].translation_text) {
          content = result[0].translation_text
        } else {
          content = result[0].summary_text || JSON.stringify(result[0])
        }
      } else {
        content = result.generated_text || result.text || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏.'
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
      if (!content || content.trim().length < 5) {
        throw new Error('–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏')
      }
      
      const chatResponse: ChatResponse = {
        content: content.trim(),
        mode,
        processingTime: 0,
        model: `HuggingFace: ${model}`
      }

      // –î–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–æ–±–∞–≤–ª—è–µ–º "–º—ã—à–ª–µ–Ω–∏–µ"
      if (mode === 'deep') {
        chatResponse.thinking = generateThinkingProcess(message, content)
      }

      safeLogger.info(`–£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏: ${model}`)
      return chatResponse
      
    } catch (error) {
      safeLogger.error(`–û—à–∏–±–∫–∞ —Å –º–æ–¥–µ–ª—å—é ${model}:`, error)
      lastError = error instanceof Error ? error : new Error(String(error))
      
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏, –∂–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
      if (lastError.message.includes('loading')) {
        safeLogger.info('–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –∂–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã...')
        await new Promise(resolve => setTimeout(resolve, 3000))
      }
      
      continue // –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é –º–æ–¥–µ–ª—å
    }
  }
  
  // –ï—Å–ª–∏ –≤—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–µ–∑–Ω—ã–π fallback
  safeLogger.error('–í—Å–µ –º–æ–¥–µ–ª–∏ Hugging Face –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π fallback')
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
  let content = generateSmartFallbackResponse(message, mode)
  
  return {
    content,
    mode,
    processingTime: 0,
    model: 'Komair: Smart Fallback'
  }
}

// Ollama (–ª–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫)
async function handleOllamaRequest(
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  const OLLAMA_URL = process.env.OLLAMA_URL || 'http://localhost:11434'
  
  // –í—ã–±–∏—Ä–∞–µ–º Llama –º–æ–¥–µ–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
  const model = mode === 'fast' ? 'llama3:8b' : 'llama3:70b'
  
  const messages = [
    {
      role: 'system',
      content: createContextualPrompt(mode)
    },
    ...chatHistory.slice(-8),
    { role: 'user', content: message }
  ]

  safeLogger.info(`ü¶ô –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é Llama: ${model}`)

  const response = await fetch(`${OLLAMA_URL}/api/chat`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      model,
      messages,
      stream: false,
      options: {
        temperature: mode === 'fast' ? 0.7 : 0.8,
        top_p: 0.9,
        num_predict: mode === 'fast' ? 200 : 500
      }
    })
  })

  if (!response.ok) {
    throw new Error(`Ollama API error: ${response.status}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Ollama –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${OLLAMA_URL}`)
  }

  const result = await response.json()
  const content = result.message?.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Llama.'

  const chatResponse: ChatResponse = {
    content: content.trim(),
    mode,
    processingTime: 0,
    model: `Ollama: ${model}`
  }

  if (mode === 'deep') {
    chatResponse.thinking = generateThinkingProcess(message, content)
  }

  return chatResponse
}

// Together AI (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ Llama –º–æ–¥–µ–ª–∏)
async function handleTogetherAIRequest(
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  const TOGETHER_API_URL = 'https://api.together.xyz/v1/chat/completions'
  const TOGETHER_TOKEN = process.env.TOGETHER_API_KEY
  
  if (!TOGETHER_TOKEN) {
    throw new Error('TOGETHER_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–∞ https://api.together.xyz')
  }

  // –í—ã–±–∏—Ä–∞–µ–º Llama –º–æ–¥–µ–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
  const model = mode === 'fast' 
    ? 'meta-llama/Llama-2-7b-chat-hf'  // –ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å
    : 'meta-llama/Llama-2-13b-chat-hf' // –ë–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
  
  const messages = [
    {
      role: 'system',
      content: createContextualPrompt(mode)
    },
    ...chatHistory.slice(-6),
    { role: 'user', content: message }
  ]

  safeLogger.info(`ü¶ô –ò—Å–ø–æ–ª—å–∑—É–µ–º Llama –º–æ–¥–µ–ª—å: ${model}`)

  const response = await fetch(TOGETHER_API_URL, {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${TOGETHER_TOKEN}`,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      model,
      messages,
      max_tokens: mode === 'fast' ? 200 : 500,
      temperature: mode === 'fast' ? 0.7 : 0.8,
      top_p: 0.9,
      repetition_penalty: 1.1
    })
  })

  if (!response.ok) {
    const errorData = await response.json().catch(() => ({}))
    throw new Error(`Together AI error: ${response.status} - ${errorData.error?.message || 'Unknown error'}`)
  }

  const result = await response.json()
  const content = result.choices[0]?.message?.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Llama –º–æ–¥–µ–ª–∏.'

  const chatResponse: ChatResponse = {
    content: content.trim(),
    mode,
    processingTime: 0,
    model: `Together AI: ${model}`
  }

  if (mode === 'deep') {
    chatResponse.thinking = generateThinkingProcess(message, content)
  }

  return chatResponse
}

// Groq (—Å–≤–µ—Ä—Ö–±—ã—Å—Ç—Ä—ã–µ Llama –º–æ–¥–µ–ª–∏)
async function handleGroqRequest(
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  const GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions'
  const GROQ_TOKEN = process.env.GROQ_API_KEY
  
  if (!GROQ_TOKEN) {
    throw new Error('GROQ_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–∞ https://console.groq.com')
  }

  // Groq –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–µ Llama –º–æ–¥–µ–ª–∏
  const model = mode === 'fast' 
    ? 'llama-3.1-8b-instant'   // –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å
    : 'llama-3.1-70b-versatile'  // –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
  
  const messages = [
    {
      role: 'system',
      content: createContextualPrompt(mode)
    },
    ...chatHistory.slice(-6),
    { role: 'user', content: message }
  ]

  safeLogger.info(`‚ö° –ò—Å–ø–æ–ª—å–∑—É–µ–º Groq Llama: ${model}`)
  safeLogger.info(`–ö–ª—é—á API: ${GROQ_TOKEN ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω (' + GROQ_TOKEN.substring(0, 10) + '...)' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`)

  const response = await fetch(GROQ_API_URL, {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${GROQ_TOKEN}`,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      model,
      messages,
      max_tokens: mode === 'fast' ? 200 : 500,
      temperature: mode === 'fast' ? 0.7 : 0.8,
      top_p: 0.9
    })
  })

  if (!response.ok) {
    const errorData = await response.json().catch(() => ({}))
    
    safeLogger.error(`Groq API –æ—à–∏–±–∫–∞: ${response.status}`, errorData)
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ cfToken –æ—à–∏–±–∫–∏
    const errorMessage = errorData.error?.message || errorData.message || JSON.stringify(errorData)
    if (errorMessage.includes('cfToken')) {
      throw new Error(`Groq –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å (cfToken error). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å GROQ_API_KEY –≤ .env.local`)
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if (response.status === 401) {
      throw new Error(`Groq API: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –Ω–∞ https://console.groq.com`)
    }
    
    if (response.status === 429) {
      throw new Error(`Groq API: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`)
    }
    
    throw new Error(`Groq API error: ${response.status} - ${errorData.error?.message || errorData.message || 'Unknown error'}`)
  }

  const result = await response.json()
  const content = result.choices[0]?.message?.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Groq Llama.'

  const chatResponse: ChatResponse = {
    content: content.trim(),
    mode,
    processingTime: 0,
    model: `Groq: ${model}`
  }

  if (mode === 'deep') {
    chatResponse.thinking = generateThinkingProcess(message, content)
  }

  return chatResponse
}

// Cohere (Command –º–æ–¥–µ–ª–∏)
async function handleCohereRequest(
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  const COHERE_API_URL = 'https://api.cohere.ai/v1/chat'
  const COHERE_TOKEN = process.env.COHERE_API_KEY
  
  if (!COHERE_TOKEN) {
    throw new Error('COHERE_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–∞ https://dashboard.cohere.ai')
  }

  // Cohere Command –º–æ–¥–µ–ª–∏
  const model = mode === 'fast' 
    ? 'command-light'  // –ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å
    : 'command'        // –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è Cohere
  const chat_history = chatHistory.slice(-6).map(msg => ({
    role: msg.role === 'user' ? 'USER' : 'CHATBOT',
    message: msg.content
  }))

  safeLogger.info(`üîÆ –ò—Å–ø–æ–ª—å–∑—É–µ–º Cohere: ${model}`)

  const response = await fetch(COHERE_API_URL, {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${COHERE_TOKEN}`,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      model,
      message,
      chat_history,
      max_tokens: mode === 'fast' ? 200 : 500,
      temperature: mode === 'fast' ? 0.7 : 0.8,
      k: 40,
      p: 0.9
    })
  })

  if (!response.ok) {
    const errorData = await response.json().catch(() => ({}))
    throw new Error(`Cohere API error: ${response.status} - ${errorData.message || 'Unknown error'}`)
  }

  const result = await response.json()
  const content = result.text || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Cohere.'

  const chatResponse: ChatResponse = {
    content: content.trim(),
    mode,
    processingTime: 0,
    model: `Cohere: ${model}`
  }

  if (mode === 'deep') {
    chatResponse.thinking = generateThinkingProcess(message, content)
  }

  return chatResponse
}

// OpenAI API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
async function handleOpenAIRequest(
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  const OPENAI_TOKEN = process.env.OPENAI_API_KEY
  
  if (!OPENAI_TOKEN) {
    throw new Error('OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
  }

  const model = mode === 'fast' ? 'gpt-3.5-turbo' : 'gpt-4'
  
  const messages = [
    {
      role: 'system',
      content: createContextualPrompt(mode)
    },
    ...chatHistory.slice(-8),
    { role: 'user', content: message }
  ]

  const response = await fetch('https://api.openai.com/v1/chat/completions', {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${OPENAI_TOKEN}`,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      model,
      messages,
      max_tokens: mode === 'fast' ? 150 : 500,
      temperature: mode === 'fast' ? 0.7 : 0.8,
    })
  })

  if (!response.ok) {
    throw new Error(`OpenAI API error: ${response.status}`)
  }

  const result = await response.json()
  const content = result.choices[0]?.message?.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç.'

  const chatResponse: ChatResponse = {
    content,
    mode,
    processingTime: 0,
    model: `OpenAI: ${model}`
  }

  if (mode === 'deep') {
    chatResponse.thinking = generateThinkingProcess(message, content)
  }

  return chatResponse
}

// –¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è (—É–º–Ω–∞—è mock-—Å–∏—Å—Ç–µ–º–∞)
async function handleMockRequest(
  message: string, 
  mode: 'fast' | 'deep',
  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>
): Promise<ChatResponse> {
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
  await new Promise(resolve => setTimeout(resolve, mode === 'fast' ? 500 : 1500))

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω—É—é –ª–æ–≥–∏–∫—É –æ—Ç–≤–µ—Ç–æ–≤
  const content = generateSmartMockResponse(message, mode)

  const chatResponse: ChatResponse = {
    content,
    mode,
    processingTime: 0,
    model: 'Komair Smart Mock'
  }

  if (mode === 'deep') {
    chatResponse.thinking = generateThinkingProcess(message, content)
  }

  return chatResponse
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –º—ã—à–ª–µ–Ω–∏—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞
// –£–º–Ω–∞—è mock-—Å–∏—Å—Ç–µ–º–∞ —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
function generateSmartMockResponse(question: string, mode: 'fast' | 'deep'): string {
  const lowerQuestion = question.toLowerCase()
  
  // –ù–∞—É—á–Ω—ã–µ —Ç–µ–º—ã
  if (lowerQuestion.includes('—É–≥–ª–µ—Ä–æ–¥')) {
    return mode === 'fast' 
      ? 'üî¨ –£–≥–ª–µ—Ä–æ–¥ (C) - —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –∞—Ç–æ–º–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º 6. –û—Å–Ω–æ–≤–∞ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –≤–∏–¥–µ –∞–ª–º–∞–∑–∞, –≥—Ä–∞—Ñ–∏—Ç–∞, –≥—Ä–∞—Ñ–µ–Ω–∞ –∏ —Ñ—É–ª–ª–µ—Ä–µ–Ω–æ–≤.'
      : `üî¨ **–£–≥–ª–µ—Ä–æ–¥ (C) - –æ—Å–Ω–æ–≤–∞ –∂–∏–∑–Ω–∏**

–£–≥–ª–µ—Ä–æ–¥ - —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –∞—Ç–æ–º–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º 6.

üíé **–û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:**
- –ê—Ç–æ–º–Ω–∞—è –º–∞—Å—Å–∞: 12.01 –∞.–µ.–º.
- 4 –≤–∞–ª–µ–Ω—Ç–Ω—ã—Ö —ç–ª–µ–∫—Ç—Ä–æ–Ω–∞
- –û–±—Ä–∞–∑—É–µ—Ç 4 –∫–æ–≤–∞–ª–µ–Ω—Ç–Ω—ã–µ —Å–≤—è–∑–∏
- –ù–µ–º–µ—Ç–∞–ª–ª, IV –≥—Ä—É–ø–ø–∞

üï∏Ô∏è **–ê–ª–ª–æ—Ç—Ä–æ–ø–Ω—ã–µ —Ñ–æ—Ä–º—ã:**
‚Ä¢ **–ê–ª–º–∞–∑** - —Å–∞–º–æ–µ —Ç–≤–µ—Ä–¥–æ–µ –ø—Ä–∏—Ä–æ–¥–Ω–æ–µ –≤–µ—â–µ—Å—Ç–≤–æ
‚Ä¢ **–ì—Ä–∞—Ñ–∏—Ç** - –º—è–≥–∫–∏–π, –ø—Ä–æ–≤–æ–¥–∏—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ
‚Ä¢ **–ì—Ä–∞—Ñ–µ–Ω** - –æ–¥–Ω–æ—Å–ª–æ–π–Ω—ã–π —É–≥–ª–µ—Ä–æ–¥, —Å–≤–µ—Ä—Ö–ø—Ä–æ—á–Ω—ã–π
‚Ä¢ **–§—É–ª–ª–µ—Ä–µ–Ω—ã** - —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–µ –º–æ–ª–µ–∫—É–ª—ã (C60, C70)

üå± **–†–æ–ª—å –≤ –ø—Ä–∏—Ä–æ–¥–µ:**
- –û—Å–Ω–æ–≤–∞ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
- –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –∂–∏–≤—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤
- –ö–ª—é—á–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç —É–≥–ª–µ—Ä–æ–¥–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
- –û—Å–Ω–æ–≤–∞ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑–∞ –∏ –¥—ã—Ö–∞–Ω–∏—è`
  }
  
  // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
  if (lowerQuestion.includes('—É—Ñ') || lowerQuestion.includes('—É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç') || lowerQuestion.includes('–±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω') || lowerQuestion.includes('–¥–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã')) {
    return mode === 'fast'
      ? 'üî¨ –£–§-–∏–∑–ª—É—á–µ–Ω–∏–µ —Å –¥–ª–∏–Ω–æ–π –≤–æ–ª–Ω—ã 254 –Ω–º (–£–§-–°) –æ–±–ª–∞–¥–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–∏–º –±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º. –≠—Ç–∞ –¥–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑—Ä—É—à–∞–µ—Ç –î–ù–ö –º–∏–∫—Ä–æ–æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤.'
      : `üî¨ **–£–§-–∏–∑–ª—É—á–µ–Ω–∏–µ –∏ –±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ**

‚ùì **–í–∞—à –≤–æ–ø—Ä–æ—Å:** –ö–∞–∫–∞—è –¥–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã –£–§ –æ–±–ª–∞–¥–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–∏–º –±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º?

‚ö° **–ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç:** 254 –Ω–º (–£–§-–° –¥–∏–∞–ø–∞–∑–æ–Ω)

üìä **–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:**

üåä **–î–∏–∞–ø–∞–∑–æ–Ω—ã –£–§-–∏–∑–ª—É—á–µ–Ω–∏—è:**
‚Ä¢ **–£–§-–ê** (315-400 –Ω–º) - —Å–ª–∞–±–æ–µ –±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
‚Ä¢ **–£–§-–í** (280-315 –Ω–º) - —É–º–µ—Ä–µ–Ω–Ω–æ–µ –±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ  
‚Ä¢ **–£–§-–°** (200-280 –Ω–º) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –±–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ

üéØ **–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–æ–ª–Ω—ã: 254 –Ω–º**

üß¨ **–ú–µ—Ö–∞–Ω–∏–∑–º –¥–µ–π—Å—Ç–≤–∏—è:**
- –ü–æ–≥–ª–æ—â–∞–µ—Ç—Å—è –î–ù–ö –∏ –†–ù–ö –º–∏–∫—Ä–æ–æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤
- –û–±—Ä–∞–∑—É–µ—Ç —Ç–∏–º–∏–Ω–æ–≤—ã–µ –¥–∏–º–µ—Ä—ã
- –ù–∞—Ä—É—à–∞–µ—Ç —Ä–µ–ø–ª–∏–∫–∞—Ü–∏—é –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
- –ü—Ä–∏–≤–æ–¥–∏—Ç –∫ –≥–∏–±–µ–ª–∏ –±–∞–∫—Ç–µ—Ä–∏–π, –≤–∏—Ä—É—Å–æ–≤ –∏ –≥—Ä–∏–±–∫–æ–≤

üìà **–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
- **254 –Ω–º** - 100% (–º–∞–∫—Å–∏–º—É–º)
- **265 –Ω–º** - ~95%
- **280 –Ω–º** - ~80%

üí° **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**
- –ë–∞–∫—Ç–µ—Ä–∏—Ü–∏–¥–Ω—ã–µ –ª–∞–º–ø—ã
- –î–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è –≤–æ–¥—ã/–≤–æ–∑–¥—É—Ö–∞
- –°—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –£–§-–° –æ–ø–∞—Å–Ω–æ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞!`
  }
  
  // –ù–∞–ª–æ–≥–æ–≤—ã–µ –∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
  if (lowerQuestion.includes('—É–ø–¥') || lowerQuestion.includes('–ø–ª–∞—Ç—ë–∂–Ω–æ–µ –ø–æ—Ä—É—á–µ–Ω–∏–µ') || lowerQuestion.includes('—Å—Ç–∞—Ç—É—Å 2')) {
    return mode === 'fast'
      ? 'üíº –ü–æ –£–ü–î —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 2: –ø–ª–∞—Ç—ë–∂–Ω–æ–µ –ø–æ—Ä—É—á–µ–Ω–∏–µ –ù–ï –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –°—Ç–∞—Ç—É—Å 2 - —ç—Ç–æ —Å—á—ë—Ç-—Ñ–∞–∫—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç.'
      : `üíº **–û—Ç–≤–µ—Ç –ø–æ –£–ü–î —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 2**

‚ùì **–í–∞—à –≤–æ–ø—Ä–æ—Å:** –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å –ø–ª–∞—Ç—ë–∂–Ω–æ–µ –ø–æ—Ä—É—á–µ–Ω–∏–µ –≤ –£–ü–î —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 2?

‚úÖ **–ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç:** –ù–ï–¢, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.

üìã **–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:**

**–£–ü–î —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 2** - —ç—Ç–æ —Å—á—ë—Ç-—Ñ–∞–∫—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è:
- –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
- –ù–µ —Ç—Ä–µ–±—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ –ø–æ—Ä—É—á–µ–Ω–∏—è

üìù **–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –Ω–µ –ø—Ä–∏–ª–∞–≥–∞—Ç—å –ø–ª–∞—Ç—ë–∂–Ω–æ–µ –ø–æ—Ä—É—á–µ–Ω–∏–µ:**
1. –ü—Ä–∏ –æ—Ç—Å—Ä–æ—á–∫–µ –ø–ª–∞—Ç–µ–∂–∞
2. –ü—Ä–∏ —Ä–∞—Å—Å—Ä–æ—á–∫–µ –æ–ø–ª–∞—Ç—ã
3. –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–∞–ª–∏—á–Ω—ã–º–∏
4. –ü—Ä–∏ –∑–∞—á—ë—Ç–µ –≤–∑–∞–∏–º–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –û–¥–Ω–∞–∫–æ –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ –ø–æ—Ä—É—á–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.`
  }
  if (lowerQuestion.includes('javascript') || lowerQuestion.includes('—è–≤–∞—Å–∫—Ä–∏–ø—Ç')) {
    return mode === 'fast'
      ? 'üíª JavaScript - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –≤ –º–∏—Ä–µ.'
      : `üíª **JavaScript - —è–∑—ã–∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏**

JavaScript - –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

‚öôÔ∏è **–û—Å–Ω–æ–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è
- –ü—Ä–æ—Ç–æ—Ç–∏–ø–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
- –§—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å (async/await)

üåê **–û–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:**
- Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (–≤ –±—Ä–∞—É–∑–µ—Ä–µ)
- Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (Node.js)
- –ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (React Native)
- –î–µ—Å–∫—Ç–æ–ø-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (Electron)`
  }
  
  // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
  if (lowerQuestion.includes('–∫–∞–∫') || lowerQuestion.includes('—á—Ç–æ') || lowerQuestion.includes('–ø–æ—á–µ–º—É')) {
    return mode === 'fast'
      ? `ü§ñ –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å: "${question}". –Ø Komair - –≤–∞—à –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –≥–æ—Ç–æ–≤—ã–π –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏!`
      : `ü§ñ **–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞:**

üîç **–í–æ–ø—Ä–æ—Å:** "${question}"

üß† **–ú–æ–π –ø–æ–¥—Ö–æ–¥ –∫ –∞–Ω–∞–ª–∏–∑—É:**
1. –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞
2. –ê–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ –ø–æ–Ω—è—Ç–∏–π
3. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
4. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

üìö **–Ø Komair - –≤–∞—à —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!**
–ú–æ–≥—É –ø–æ–º–æ—á—å —Å: –Ω–∞—É–∫–æ–π, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –æ–±—É—á–µ–Ω–∏–µ–º, –∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º!`
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
  return generateUniversalResponse(question, mode)
}

// –£–º–Ω—ã–π fallback —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
function generateSmartFallbackResponse(question: string, mode: 'fast' | 'deep'): string {
  const lowerQuestion = question.toLowerCase()
  
  // –ù–∞—É—á–Ω—ã–µ —Ç–µ–º—ã
  if (lowerQuestion.includes('—É–≥–ª–µ—Ä–æ–¥')) {
    return mode === 'fast' 
      ? '–£–≥–ª–µ—Ä–æ–¥ (C) - —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –∞—Ç–æ–º–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º 6. –û—Å–Ω–æ–≤–∞ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –≤–∏–¥–µ –∞–ª–º–∞–∑–∞, –≥—Ä–∞—Ñ–∏—Ç–∞ –∏ –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º.'
      : `–£–≥–ª–µ—Ä–æ–¥ (C) - —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –∞—Ç–æ–º–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º 6.

üî¨ **–û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:**
- –ê—Ç–æ–º–Ω–∞—è –º–∞—Å—Å–∞: 12.01
- 4 –≤–∞–ª–µ–Ω—Ç–Ω—ã—Ö —ç–ª–µ–∫—Ç—Ä–æ–Ω–∞
- –ú–æ–∂–µ—Ç –æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å 4 –∫–æ–≤–∞–ª–µ–Ω—Ç–Ω—ã–µ —Å–≤—è–∑–∏

üíé **–ê–ª–ª–æ—Ç—Ä–æ–ø–Ω—ã–µ —Ñ–æ—Ä–º—ã:**
- –ê–ª–º–∞–∑ (—Å–∞–º–æ–µ —Ç–≤–µ—Ä–¥–æ–µ –≤–µ—â–µ—Å—Ç–≤–æ)
- –ì—Ä–∞—Ñ–∏—Ç (–º—è–≥–∫–∏–π, –ø—Ä–æ–≤–æ–¥–∏—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ)
- –ì—Ä–∞—Ñ–µ–Ω (–æ–¥–Ω–æ—Å–ª–æ–π–Ω—ã–π —É–≥–ª–µ—Ä–æ–¥)
- –§—É–ª–ª–µ—Ä–µ–Ω—ã (—Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–µ –º–æ–ª–µ–∫—É–ª—ã)

‚öôÔ∏è **–ó–Ω–∞—á–µ–Ω–∏–µ:**
–£–≥–ª–µ—Ä–æ–¥ - –æ—Å–Ω–æ–≤–∞ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏ –∂–∏–≤—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤.`
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return `–û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å: "${question}"

‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –ò–ò-–º–æ–¥–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.`
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –º—ã—à–ª–µ–Ω–∏—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞
function generateThinkingProcess(question: string, answer: string): string {
  return `–ê–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–∞: "${question}"

üîç –®–∞–≥ 1: –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º–µ.

üß† –®–∞–≥ 2: –ê–Ω–∞–ª–∏–∑
–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –∫–ª—é—á–µ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã –≤–æ–ø—Ä–æ—Å–∞.

üí° –®–∞–≥ 3: –†–µ—à–µ–Ω–∏–µ
–§–æ—Ä–º–∏—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç.

‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ü–æ–ª—É—á–µ–Ω –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.`
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã
function generateUniversalResponse(question: string, mode: 'fast' | 'deep'): string {
  const lowerQuestion = question.toLowerCase()
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–∞
  let category = '–æ–±—â–∏–µ'
  let emoji = 'ü§î'
  
  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
  if (lowerQuestion.includes('–∫–∞–∫') || lowerQuestion.includes('–∫–∞–∫–æ–π') || lowerQuestion.includes('–∫–∞–∫–∏–µ')) {
    category = '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'
    emoji = 'üìù'
  } else if (lowerQuestion.includes('—á—Ç–æ') || lowerQuestion.includes('–∫—Ç–æ') || lowerQuestion.includes('–≥–¥–µ')) {
    category = '–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'
    emoji = 'üìñ'
  } else if (lowerQuestion.includes('–ø–æ—á–µ–º—É') || lowerQuestion.includes('–∑–∞—á–µ–º') || lowerQuestion.includes('–æ—Ç–∫—É–¥–∞')) {
    category = '–æ–±—ä—è—Å–Ω–µ–Ω–∏—è'
    emoji = 'üß†'
  } else if (lowerQuestion.includes('–∫–æ–≥–¥–∞') || lowerQuestion.includes('—Å–∫–æ–ª—å–∫–æ')) {
    category = '–≤—Ä–µ–º—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'
    emoji = '‚è∞'
  } else if (lowerQuestion.includes('–º–æ–∂–Ω–æ') || lowerQuestion.includes('–Ω—É–∂–Ω–æ') || lowerQuestion.includes('—Å—Ç–æ–∏—Ç')) {
    category = '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'
    emoji = 'üí°'
  } else if (lowerQuestion.includes('–ª—É—á—à–µ') || lowerQuestion.includes('—Ö—É–∂–µ') || lowerQuestion.includes('—Å—Ä–∞–≤–Ω')) {
    category = '—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ'
    emoji = '‚öñÔ∏è'
  }
  
  if (mode === 'fast') {
    return `${emoji} **–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å**

–í–æ–ø—Ä–æ—Å: "${question}"

–Ø Komair, –≤–∞—à –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç! –≠—Ç–æ –≤–æ–ø—Ä–æ—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}". –•–æ—Ç—è —Å–µ–π—á–∞—Å —è —Ä–∞–±–æ—Ç–∞—é –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, —è —Å—Ç–∞—Ä–∞—é—Å—å –¥–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç.

üí° **–ö—Ä–∞—Ç–∫–∏–π —Å–æ–≤–µ—Ç:** –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª—É–±–æ–∫–∏–π —Ä–µ–∂–∏–º –¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.`
  }
  
  // –ì–ª—É–±–æ–∫–∏–π —Ä–µ–∂–∏–º - –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
  return `${emoji} **–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–∞**

üîç **–í–∞—à –≤–æ–ø—Ä–æ—Å:** "${question}"

üè∑Ô∏è **–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** ${category}

üß† **–ú–æ–π –∞–Ω–∞–ª–∏–∑:**

1. **–ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞**
   –≠—Ç–æ –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω. –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${category}" –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π.

2. **–ö–ª—é—á–µ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã**
   - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π
   - –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π
   - –£—á—ë—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –Ω—é–∞–Ω—Å–æ–≤
   - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ

3. **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**
   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±—ã—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ
   - –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–ª–∏ –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
   - –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å —Å —Ä–∞–∑–Ω—ã—Ö —É–≥–ª–æ–≤

üìö **–û –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö:**
–Ø - Komair, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –°–µ–π—á–∞—Å —è —Ä–∞–±–æ—Ç–∞—é –≤ —É–ª—É—á—à–µ–Ω–Ω–æ–º —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–Ω–µ:

- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
- –ü—Ä–æ–≤–æ–¥–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
- –î–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
- –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è

‚ú® **–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏!**`
}