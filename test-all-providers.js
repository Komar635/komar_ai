// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
const { providerManager } = require('./src/lib/provider-manager');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...');
console.log('================================');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
const providersStatus = providerManager.getProvidersStatus();
const enabledProviders = providersStatus.filter(p => {
  const config = providerManager.getProviderConfig(p.name);
  return config && config.enabled;
});

console.log('üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã:');
enabledProviders.forEach(provider => {
  console.log(`  - ${provider.name}: ${provider.isHealthy ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
});

console.log('\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:');
enabledProviders.forEach(provider => {
  const config = providerManager.getProviderConfig(provider.name);
  if (config) {
    console.log(`  - ${provider.name}:`);
    console.log(`    ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${config.priority}`);
    console.log(`    ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: ${config.maxRetries}`);
    console.log(`    ‚Ä¢ –¢–∞–π–º–∞—É—Ç: ${config.timeout}ms`);
  }
});

console.log('\nüîÑ –ü–æ—Ä—è–¥–æ–∫ fallback –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:');
const fallbackOrder = enabledProviders
  .sort((a, b) => {
    const configA = providerManager.getProviderConfig(a.name);
    const configB = providerManager.getProviderConfig(b.name);
    return (configA?.priority || 0) - (configB?.priority || 0);
  })
  .map(p => p.name);

console.log('  ' + fallbackOrder.join(' ‚Üí '));

console.log('\nüîë –°—Ç–∞—Ç—É—Å API –∫–ª—é—á–µ–π:');
console.log('  GROQ_API_KEY:', process.env.GROQ_API_KEY ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
console.log('  HUGGINGFACE_TOKEN:', process.env.HUGGINGFACE_TOKEN ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
console.log('  TOGETHER_API_KEY:', process.env.TOGETHER_API_KEY ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
console.log('  COHERE_API_KEY:', process.env.COHERE_API_KEY ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');